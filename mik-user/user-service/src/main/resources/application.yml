spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/xxl?serverTimezone=GMT%2B8&useSSL=true
    username: root
    password: root
#  cloud:
#    openfeign:
#      circuitbreaker:
#        enabled: true
#      compression:
#        request:
#          enabled: true
#          mime-types: text/xml,application/xml, application/json  # 压缩类型
#          min-request-size: 1024  # 最小压缩值标准，当数据大于 1024 才会进行压缩
#        response:
#          enabled: true
#      okhttp:
#        enabled: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: Asia/Shanghai
  data:
    redis:
      database: 7
      host: 127.0.0.1
      port: 6379
      password: admin123
  boot:
    admin:
      client:
        url: http://localhost:8085
  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml

file-path:
  path: D:/file/
  url: http://localhost:8081/upload/
file:
  type: local

qr:
  path: http://192.168.31.96/layout/qr/info/

mik:
  white:
    urls:
      - "/sms/login"
      - "/login"
      - "/doc.html"
      - "/v3/api-docs"
      - "/v3/api-docs/**"
      - "/v3/api-docs/swagger-config"
      - "/.well-known/appspecific/com.chrome.devtools.json"
      - "/webjars/**"
      - "/favicon.ico"
      - "/upload/**"
      - "/area/getAreaByUid"
      - "/file/upload"

# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn



#resilience4j:
#  bulkhead:
#    instances:
#      test01:
#        max-attempts: 2
#        wait-duration: 1s
#    backends:
#  circuitbreaker:
#    instances:
#    backends:
#  ratelimiter:
#    instances:
#resilience4j:
#  circuitbreaker:
#    configs:
#      default:
#        ringBufferSizeInClosedState: 5 # 熔断器关闭时的缓冲区大小
#        ringBufferSizeInHalfOpenState: 2 # 熔断器半开时的缓冲区大小
#        waitDurationInOpenState: 10000 # 熔断器从打开到半开需要的时间
#        failureRateThreshold: 60 # 熔断器打开的失败阈值
#        eventConsumerBufferSize: 10 # 事件缓冲区大小
#        registerHealthIndicator: true # 健康监测
#        automaticTransitionFromOpenToHalfOpenEnabled: false # 是否自动从打开到半开，不需要触发
##        recordFailurePredicate:    com.example.resilience4j.exceptions.RecordFailurePredicate # 谓词设置异常是否为失败
##        recordExceptions: # 记录的异常
##          - com.example.resilience4j.exceptions.BusinessBException
##          - com.example.resilience4j.exceptions.BusinessAException
##        ignoreExceptions: # 忽略的异常
##          - com.example.resilience4j.exceptions.BusinessAException
#    instances:
#      backendA:
#        baseConfig: default
#        waitDurationInOpenState: 5000
#        failureRateThreshold: 20
#      backendB:
#        baseConfig: default
#  timelimiter:
#    instances:
#      backendA:
#        timeoutDuration: 2s
#        cancelRunningFuture: true
#      backendB:
#        timeoutDuration: 1s
#        cancelRunningFuture: false
server:
  #  port: ${random.int(2000,8000)}
  port: 8081

#配置可监控信息
management:
  #对外开放某个监控点
  endpoint:
    #health必须开
    health:
      show-details: always
      enabled: true
    #其他
    beans:
      enabled: true
  endpoints:
    #对web开启的监控点
    web:
      exposure:
        include: "*"
    #对外开放所有监控点
    enabled-by-default: true
